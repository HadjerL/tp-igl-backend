# Generated by Django 4.1.4 on 2022-12-31 12:43

from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=35)),
                ('interface', models.FloatField(default=0.0)),
                ('prix', models.FloatField(default=0.0)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Caregorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_cat', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20)),
                ('prenom', models.CharField(max_length=20)),
                ('adresse', models.TextField(blank=True)),
                ('tele', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Wilaya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50)),
                ('commune', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='wilaya', chained_model_field='wilaya', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='gestionAnnonce.commune')),
                ('wilaya', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='gestionAnnonce.wilaya')),
            ],
        ),
        migrations.AddField(
            model_name='commune',
            name='wilaya',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='Commune', to='gestionAnnonce.wilaya'),
        ),
        migrations.CreateModel(
            name='AnnoncementImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='photo%y%m%d')),
                ('annoncement', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='gestionAnnonce.annonce')),
            ],
        ),
        migrations.AddField(
            model_name='annonce',
            name='caregorie',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='annonce', to='gestionAnnonce.caregorie'),
        ),
        migrations.AddField(
            model_name='annonce',
            name='contact',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='annonce', to='gestionAnnonce.contact'),
        ),
        migrations.AddField(
            model_name='annonce',
            name='location',
            field=models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='gestionAnnonce.location'),
        ),
        migrations.AddField(
            model_name='annonce',
            name='type',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='annonce', to='gestionAnnonce.type'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('family_name', models.CharField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=254, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
